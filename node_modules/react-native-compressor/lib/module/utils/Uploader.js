import { NativeEventEmitter, Platform } from 'react-native';
import { Compressor } from '../Main';
const CompressEventEmitter = new NativeEventEmitter(Compressor);
import { uuidv4 } from './index';
export let UploadType = /*#__PURE__*/function (UploadType) {
  UploadType[UploadType["BINARY_CONTENT"] = 0] = "BINARY_CONTENT";
  UploadType[UploadType["MULTIPART"] = 1] = "MULTIPART";
  return UploadType;
}({});
export let UploaderHttpMethod = /*#__PURE__*/function (UploaderHttpMethod) {
  UploaderHttpMethod["POST"] = "POST";
  UploaderHttpMethod["PUT"] = "PUT";
  UploaderHttpMethod["PATCH"] = "PATCH";
  return UploaderHttpMethod;
}({});
export const backgroundUpload = async (url, fileUrl, options, onProgress) => {
  const uuid = uuidv4();
  let subscription;
  try {
    if (onProgress) {
      subscription = CompressEventEmitter.addListener('uploadProgress', event => {
        if (event.uuid === uuid) {
          onProgress(event.data.written, event.data.total);
        }
      });
    }
    if (Platform.OS === 'android' && fileUrl.includes('file://')) {
      fileUrl = fileUrl.replace('file://', '');
    }
    const result = await Compressor.upload(fileUrl, {
      uuid,
      method: options.httpMethod,
      headers: options.headers,
      uploadType: options.uploadType,
      ...options,
      url
    });
    return result;
  } finally {
    // @ts-ignore
    if (subscription) {
      subscription.remove();
    }
  }
};
//# sourceMappingURL=Uploader.js.map